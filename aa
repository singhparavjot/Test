#!/usr/bin/env python3

import argparse
import os
import tableauserverclient as TSC

def main():
    parser = argparse.ArgumentParser(description="List and export Tableau workbooks in a specific project (folder).")
    parser.add_argument('--server', required=True, help='Server URL (e.g., https://my-tableau-server.com)')
    parser.add_argument('--site', required=True, help='Site name (site ID)')
    parser.add_argument('--token-value', required=True, help='Personal Access Token value')
    parser.add_argument('--token-name', required=True, help='Personal Access Token name')
    parser.add_argument('--project-name', required=True, help='Name of the Tableau project (folder)')
    parser.add_argument('--output-dir', required=True, help='Directory to save the exported workbooks')

    args = parser.parse_args()

    # Create the authentication object
    tableau_auth = TSC.PersonalAccessTokenAuth(
        token_name=args.token_name,
        personal_access_token=args.token_value,
        site_id=args.site
    )

    # Create the server object
    server = TSC.Server(args.server, use_server_version=True)

    try:
        # Sign in to the server
        with server.auth.sign_in(tableau_auth):
            print(f"Successfully signed in as token '{args.token_name}' on site '{args.site}'")

            # Step 1: Find the target project (folder) by name
            target_project = None
            all_projects, _ = server.projects.get()
            for project in all_projects:
                if project.name.lower() == args.project_name.lower():
                    target_project = project
                    break
            
            if not target_project:
                print(f"Project (folder) '{args.project_name}' not found on site '{args.site}'.")
                return
            
            print(f"Found project: {target_project.name} (ID: {target_project.id})")

            # Step 2: Fetch all workbooks scoped to the project
            all_workbooks, _ = server.workbooks.get()
            project_workbooks = [
                wb for wb in all_workbooks if wb.project_id == target_project.id
            ]

            print(f"\nWorkbooks in project '{target_project.name}': {len(project_workbooks)}")
            for wb in project_workbooks:
                print(f"- {wb.name} (ID: {wb.id})")

            # Step 3: Export workbooks to the specified directory
            output_dir = args.output_dir
            if not os.path.exists(output_dir):
                os.makedirs(output_dir)

            for wb in project_workbooks:
                try:
                    print(f"Exporting workbook '{wb.name}'...")
                    filepath = os.path.join(output_dir, f"{wb.name}.twbx")
                    server.workbooks.download(wb.id, filepath)
                    print(f"Workbook '{wb.name}' exported to: {filepath}")
                except TSC.ServerResponseError as e:
                    print(f"Failed to export workbook '{wb.name}': {e}")

    except TSC.ServerResponseError as e:
        print(f"Error communicating with Tableau Server: {e}")

if __name__ == '__main__':
    main()
