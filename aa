1. File Provisioner

resource "azurerm_virtual_machine" "example" {
  name                  = "example-vm"
  location              = "East US"
  resource_group_name   = "example-group"
  network_interface_ids = ["example-nic-id"]
  vm_size               = "Standard_B2s"

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  provisioner "file" {
    source      = "local/file/path/script.sh"  # Local file to upload
    destination = "/remote/path/script.sh"    # Remote destination path

    connection {
      type     = "ssh"
      user     = "azureuser"
      private_key = file("~/.ssh/id_rsa")
      host     = self.public_ip_address
    }
  }
}


2. Remote Provisioner

resource "azurerm_virtual_machine" "example" {
  name                  = "example-vm"
  location              = "East US"
  resource_group_name   = "example-group"
  network_interface_ids = ["example-nic-id"]
  vm_size               = "Standard_B2s"

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  provisioner "remote-exec" {
    inline = [
      "sudo apt-get update -y",
      "sudo apt-get install -y nginx"
    ]

    connection {
      type     = "ssh"
      user     = "azureuser"
      private_key = file("~/.ssh/id_rsa")
      host     = self.public_ip_address
    }
  }
}



3. Local Provisioner

resource "azurerm_virtual_machine" "example" {
  name                  = "example-vm"
  location              = "East US"
  resource_group_name   = "example-group"
  network_interface_ids = ["example-nic-id"]
  vm_size               = "Standard_B2s"

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  provisioner "local-exec" {
    command = "echo 'Provisioning completed!' >> logs.txt"
  }
}


