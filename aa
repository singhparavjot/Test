import pyodbc
from azure.identity import DefaultAzureCredential

# Define SQL Server and database details
SQL_SERVER_NAME = 'your-sql-server-name.database.windows.net'
DATABASE_NAME = 'your-database-name'

# Create an Azure Managed Identity credential
credential = DefaultAzureCredential()

# Define a function to get the token for the SQL database
def get_token():
    token = credential.get_token("https://database.windows.net/.default")
    return token.token

# Define the connection string, specifying ODBC Driver 17 for SQL Server
connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};" \
                    f"SERVER={SQL_SERVER_NAME};" \
                    f"DATABASE={DATABASE_NAME};" \
                    f"Encrypt=yes;" \
                    f"TrustServerCertificate=no;"

# Establish connection using pyodbc and the access token
try:
    # Get an access token
    token = get_token()

    # Open connection using the token
    conn = pyodbc.connect(connection_string, attrs_before={1256: token})

    # Run a sample query
    cursor = conn.cursor()
    cursor.execute("SELECT TOP 10 * FROM some_table")
    
    # Print results
    for row in cursor.fetchall():
        print(row)

    print("Access succeeded.")

except Exception as e:
    print(f"Access failed: {str(e)}")

finally:
    # Close connection if open
    if 'conn' in locals():
        conn.close()
