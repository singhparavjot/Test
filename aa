trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

parameters:
  - name: deployOption
    displayName: "Select Deployment Option"
    type: string
    default: 'All'
    values:
      - All
      - ADF
      - Databricks
      - SQL
      - LogicApp

variables:
  azureSubscription: '<Your-Azure-Subscription-Name>'
  resourceGroup: '<Your-Resource-Group>'
  adfName: '<Your-Data-Factory-Name>'
  databricksWorkspace: '<Your-Databricks-Workspace>'
  sqlServerName: '<Your-SQL-Server-Name>'
  logicAppName: '<Your-Logic-App-Name>'

stages:
  - stage: Deploy
    jobs:
      - job: DeployADF
        displayName: "Deploy to Azure Data Factory"
        condition: or(eq('${{ parameters.deployOption }}', 'All'), eq('${{ parameters.deployOption }}', 'ADF'))
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.x'
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az datafactory pipeline create --factory-name $(adfName) --resource-group $(resourceGroup) --name 'pipeline_name' --pipeline @path/to/your/adf_pipeline.json

      - job: DeployDatabricks
        displayName: "Deploy to Azure Databricks"
        condition: or(eq('${{ parameters.deployOption }}', 'All'), eq('${{ parameters.deployOption }}', 'Databricks'))
        steps:
          - task: DatabricksDeployNotebookTask@0
            inputs:
              azureSubscription: $(azureSubscription)
              databricksInstance: $(databricksWorkspace)
              sourcePath: 'path/to/your/notebook/file.py'
              destinationPath: '/Shared/your-notebook-path'

      - job: DeploySQL
        displayName: "Deploy to Azure SQL Database"
        condition: or(eq('${{ parameters.deployOption }}', 'All'), eq('${{ parameters.deployOption }}', 'SQL'))
        steps:
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: $(azureSubscription)
              ServerName: $(sqlServerName)
              DatabaseName: '<Your-Database-Name>'
              SqlUsername: '<Your-SQL-Admin-Username>'
              SqlPassword: '<Your-SQL-Admin-Password>'
              DacpacFile: 'path/to/your/database.dacpac'
              DeployOptions: '/Action:Publish'

      - job: DeployLogicApp
        displayName: "Deploy to Azure Logic App"
        condition: or(eq('${{ parameters.deployOption }}', 'All'), eq('${{ parameters.deployOption }}', 'LogicApp'))
        steps:
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroup)
              location: '<Your-Region>'
              templateLocation: 'Linked artifact'
              csmFile: 'path/to/your/logicapp-template.json'
              csmParametersFile: 'path/to/your/logicapp-parameters.json'
