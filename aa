from flask import Flask, jsonify
from azure.identity import DefaultAzureCredential
import pyodbc

app = Flask(__name__)

# Define SQL Server and database details
SQL_SERVER_NAME = 'your-sql-server-name.database.windows.net'
DATABASE_NAME = 'your-database-name'

# Create an Azure Managed Identity credential
credential = DefaultAzureCredential()

# Define a function to get the token for the SQL database
def get_token():
    token = credential.get_token("https://database.windows.net/.default")
    return token.token

# Define the connection string, specifying ODBC Driver 17 for SQL Server
connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};" \
                    f"SERVER={SQL_SERVER_NAME};" \
                    f"DATABASE={DATABASE_NAME};" \
                    f"Encrypt=yes;" \
                    f"TrustServerCertificate=no;"

@app.route('/')  # Define the route for the root URL
def get_data():
    try:
        # Get an access token
        token = get_token()

        # Open connection using the token
        conn = pyodbc.connect(connection_string, attrs_before={1256: token})

        # Run a sample query
        cursor = conn.cursor()
        cursor.execute("SELECT TOP 10 * FROM your_table_name")  # Replace 'your_table_name' with your actual table name
        
        # Fetch and format the results
        results = [dict(zip([column[0] for column in cursor.description], row)) for row in cursor.fetchall()]
        
        return jsonify(results)

    except Exception as e:
        return f"Access failed: {str(e)}", 500

    finally:
        # Close connection if open
        if 'conn' in locals():
            conn.close()

if __name__ == '__main__':
    app.run(debug=True)
