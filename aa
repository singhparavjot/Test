#!/usr/bin/env python3

import argparse
import tableauserverclient as TSC

def main():
    parser = argparse.ArgumentParser(description="List Tableau workbooks by site and optional project.")
    parser.add_argument('--server', required=True, help='Server URL (e.g., https://my-tableau-server.com)')
    parser.add_argument('--site', required=True, help='Site name (site ID)')
    parser.add_argument('--token-value', required=True, help='Personal Access Token value')
    parser.add_argument('--token-name', required=True, help='Personal Access Token name')
    parser.add_argument('--project-name', required=False, help='Name of the Tableau project (optional)')

    args = parser.parse_args()

    # Create the authentication object
    tableau_auth = TSC.PersonalAccessTokenAuth(
        token_name=args.token_name,
        personal_access_token=args.token_value,
        site_id=args.site
    )

    # Create the server object
    server = TSC.Server(args.server, use_server_version=True)

    try:
        # Sign in to the server
        with server.auth.sign_in(tableau_auth):
            print(f"Successfully signed in as token '{args.token_name}' on site '{args.site}'")

            target_project = None
            if args.project_name:
                # Fetch all projects, then find the one that matches
                all_projects, _ = server.projects.get()
                for project in all_projects:
                    if project.name.lower() == args.project_name.lower():
                        target_project = project
                        break
                
                if target_project:
                    print(f"Found matching project: {target_project.name} (ID: {target_project.id})")
                else:
                    print(f"Project '{args.project_name}' not found. Listing all workbooks in the site.")

            # Get ALL workbooks in the site
            all_workbooks, pagination_item = server.workbooks.get()
            print(f"\nTotal workbooks in site: {pagination_item.total_available}")

            # If a specific project was found, filter locally by project_id
            if target_project:
                filtered_workbooks = [wb for wb in all_workbooks if wb.project_id == target_project.id]
                print(f"Workbooks in project '{target_project.name}': {len(filtered_workbooks)}")
                for wb in filtered_workbooks:
                    print(f"- {wb.name} (ID: {wb.id})")
            else:
                # Otherwise, list all workbooks
                for wb in all_workbooks:
                    print(f"- {wb.name} (ID: {wb.id})")

    except TSC.ServerResponseError as e:
        print(f"Error communicating with Tableau Server: {e}")

if __name__ == '__main__':
    main()
