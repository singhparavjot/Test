#!/usr/bin/env python3

import argparse
import tableauserverclient as TSC

def main():
    parser = argparse.ArgumentParser(description="List Tableau workbooks in a specific project (folder).")
    parser.add_argument('--server', required=True, help='Server URL (e.g., https://my-tableau-server.com)')
    parser.add_argument('--site', required=True, help='Site name (site ID)')
    parser.add_argument('--token-value', required=True, help='Personal Access Token value')
    parser.add_argument('--token-name', required=True, help='Personal Access Token name')
    parser.add_argument('--project-name', required=True, help='Name of the Tableau project (folder)')

    args = parser.parse_args()

    # Create the authentication object
    tableau_auth = TSC.PersonalAccessTokenAuth(
        token_name=args.token_name,
        personal_access_token=args.token_value,
        site_id=args.site
    )

    # Create the server object
    server = TSC.Server(args.server, use_server_version=True)

    try:
        # Sign in to the server
        with server.auth.sign_in(tableau_auth):
            print(f"Successfully signed in as token '{args.token_name}' on site '{args.site}'")

            # Find the target project (folder) by name
            target_project = None
            all_projects, _ = server.projects.get()
            for project in all_projects:
                if project.name.lower() == args.project_name.lower():
                    target_project = project
                    break
            
            if not target_project:
                print(f"Project (folder) '{args.project_name}' not found on site '{args.site}'.")
                return
            
            print(f"Found project: {target_project.name} (ID: {target_project.id})")

            # Query workbooks directly within the project using the project's ID
            request_options = TSC.RequestOptions()
            request_options.filter.add(
                TSC.Filter(
                    TSC.RequestOptions.Field.ProjectId,
                    TSC.RequestOptions.Operator.Equals,
                    target_project.id
                )
            )
            filtered_workbooks, pagination_item = server.workbooks.get(request_options)

            # Print the filtered workbooks
            print(f"\nWorkbooks in project '{target_project.name}': {pagination_item.total_available}")
            for wb in filtered_workbooks:
                print(f"- {wb.name} (ID: {wb.id})")

    except TSC.ServerResponseError as e:
        print(f"Error communicating with Tableau Server: {e}")

if __name__ == '__main__':
    main()
