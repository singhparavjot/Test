from flask import Flask
import pyodbc
from azure.identity import DefaultAzureCredential
import logging

# Set up logging
logging.basicConfig(level=logging.INFO)

app = Flask(__name__)

# SQL Server and database details
SQL_SERVER_NAME = 'your-sql-server-name.database.windows.net'
DATABASE_NAME = 'your-database-name'

# Initialize DefaultAzureCredential for managed identity
credential = DefaultAzureCredential()

# Function to get the access token
def get_token():
    token = credential.get_token("https://database.windows.net/.default")
    return token.token

# Connection string without username and password
connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};" \
                    f"SERVER={SQL_SERVER_NAME};" \
                    f"DATABASE={DATABASE_NAME};" \
                    f"Encrypt=yes;" \
                    f"TrustServerCertificate=no;"

@app.route('/')
def test_db_connection():
    try:
        # Get access token for managed identity
        token = get_token()

        # Establish connection using the token
        conn = pyodbc.connect(connection_string, attrs_before={1256: token})

        # Execute a simple query to confirm connection
        cursor = conn.cursor()
        cursor.execute("SELECT 1")

        return "Database connection successful using managed identity!"

    except Exception as e:
        logging.error(f"Error: {str(e)}")
        return "An error occurred. Check the logs for details.", 500

    finally:
        # Close connection if open
        if 'conn' in locals():
            conn.close()

if __name__ == '__main__':
    app.run(debug=True)
