import requests
import json

# Set the parameters
apim_url = "apim_url"
deployment_name = "deployment_name"
api_version = "2024-02-15-preview"
subscription_key = "subscription_key"

# Construct the URL and headers
url = f"{apim_url}/deployments/{deployment_name}/chat/completions?api-version={api_version}"
headers = {
    "Content-Type": "application/json",
    "Ocp-Apim-Subscription-Key": subscription_key
}

# Read the input from a text file
input_file = "input.txt"
with open(input_file, 'r') as file:
    file_content = file.read()

# Define additional instructions
additional_instructions = "Please convert this code from Python to Java."

# Combine additional instructions and file content
user_input = f"{additional_instructions}\n\nCode:\n{file_content}"

# Define the JSON payload with combined user input
json_payload = {
    "messages": [
        {
            "role": "system",
            "content": "You are an AI assistant that helps with code conversion tasks."
        },
        {
            "role": "user",
            "content": user_input
        }
    ],
    "temperature": 0.7,
    "top_p": 0.95,
    "max_tokens": 800
}

# Make the POST request
response = requests.post(url, headers=headers, json=json_payload)

# Parse the response and extract only the relevant part (choices -> message -> content)
response_data = response.json()
if 'choices' in response_data and len(response_data['choices']) > 0:
    relevant_output = response_data['choices'][0]['message']['content']
else:
    relevant_output = "No relevant output found."

# Write the relevant output to an output text file
output_file = "output.txt"
with open(output_file, 'w') as file:
    file.write(relevant_output)

print(f"Relevant output written to {output_file}")
